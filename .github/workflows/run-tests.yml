name: Run tests

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: [3.2.17]
        java-version: [1.8]
        python-version: [3.7]
        MAVEN_SETTINGS: [maven_settings.xml]

    steps:
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
        with:
          java-version: ${{ matrix.java-version }}
      - name: Setup Maven
        run: |
          sudo apt-get install software-properties-common && sudo apt-add-repository universe && sudo apt-get update && sudo apt-get install maven -y
          curl -v -X GET --url "${URL_MAVEN_SETTINGS}" -u '${{ secrets.GH_USERNAME }}:${{ secrets.GH_TOKEN }}' --header "Accept:${MEDIA_TYPE}" > ${{ matrix.MAVEN_SETTINGS }}
        env:
          URL_MAVEN_SETTINGS: ${{ 'https://api.github.com/repos/EBIVariation/configuration/contents/eva-maven-settings.xml?ref=ops/migrate_to_new_jfrog_artifactory' }}
          MEDIA_TYPE: ${{ 'application/vnd.github.raw' }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas psycopg2-binary pgpasslib
      - name: Install and Start MongoDB
        run: |
          wget http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-${{ matrix.mongodb-version }}.tgz
          tar xfz mongodb-linux-x86_64-${{ matrix.mongodb-version }}.tgz
          export PATH=`pwd`/mongodb-linux-x86_64-${{ matrix.mongodb-version }}/bin:$PATH
          mkdir -p data/db
          mongod --dbpath=data/db &
          mongod --version
      - name: Run Maven tests
        run: mvn test --settings ${{ matrix.MAVEN_SETTINGS }}
      - name: Run Python tests
        run: |
          cd eva-accession-import-automation
          python -m tests.test_generate_custom_assembly_report -v
