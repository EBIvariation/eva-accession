stages:
    - test
    - package
    - deploy

variables:
    WS_ARTIFACT_PATH: eva-accession-ws/target/eva-accession-ws-$ENVIRONMENT_NAME.war
    CLUSTERING_ARTIFACT_PATH: eva-accession-clustering/target/eva-accession-clustering-*.jar
    ACCESSIONING_ARTIFACT_PATH: eva-accession-pipeline/target/eva-accession-pipeline-*.jar
    CLUSTERING_SYMLINK_NAME: "eva-accession-clustering.jar"
    ACCESSIONING_SYMLINK_NAME: "eva-accession-pipeline.jar"
    MAVEN_SETTINGS: maven-settings.xml
    URL_MAVEN_SETTINGS: https://api.github.com/repos/EBIvariation/configuration/contents/eva-maven-settings.xml
    MEDIA_TYPE: application/vnd.github.raw

test:
    stage: test
    image: maven:3.6.1-jdk-8-alpine
    services:
        - mongo:3.2.17
    script:
        # Gitlab exposes services under their own hostnames. So test host should be "mongo" instead of "localhost".
        - mvn clean test --projects 'eva-accession-core,eva-accession-ws,eva-accession-remapping,eva-accession-clustering,eva-accession-pipeline' -Deva.mongo.host.test=mongo
    environment:
        name: test-env
    only:
        - fix/mongo-error-gitlab-deployment
        - master
        - tags

# Not executed, parent job definition for package
.package:
    stage: package
    image: maven:3.6.1-jdk-8-alpine
    environment:
        name: $ENVIRONMENT_NAME
    before_script:
        - DATETIME=$(date +%Y-%m-%dT%H-%M-%S)
        - apk add --update curl
        - curl -u $GITHUB_USER:$GITHUB_TOKEN -H "Accept:$MEDIA_TYPE" $URL_MAVEN_SETTINGS > $MAVEN_SETTINGS
    script:
        - mvn package --projects 'eva-accession-core,eva-accession-ws,eva-accession-remapping,eva-accession-clustering,eva-accession-pipeline' --settings $MAVEN_SETTINGS -P $MAVEN_PROFILE -DskipTests -Dtimestamp=$DATETIME
        - cp eva-accession-ws/target/eva*.war $WS_ARTIFACT_PATH
    after_script:
        - rm $MAVEN_SETTINGS
    artifacts:
        paths:
            - $WS_ARTIFACT_PATH
            - $CLUSTERING_ARTIFACT_PATH
            - $ACCESSIONING_ARTIFACT_PATH

package-internal:
    extends: .package
    variables:
        ENVIRONMENT_NAME: internal
        MAVEN_PROFILE: internal
    only:
        - master

package-development:
    extends: .package
    variables:
        ENVIRONMENT_NAME: development
        MAVEN_PROFILE: development
    only:
        - master

package-production:
    extends: .package
    variables:
        ENVIRONMENT_NAME: production
        MAVEN_PROFILE: production
    only:
        - tags

# Not executed, parent job definition for deployments
.deploy-tomcat:
    stage: deploy
    image: alpine:3.9.5
    environment:
        name: $ENVIRONMENT_NAME
    script:
        - DATETIME=$(date +%Y-%m-%dT%H-%M-%S)
        - apk add --update curl
        - curl -u $TOMCAT_USER:$TOMCAT_PASSWORD -T "$WS_ARTIFACT_PATH" "http://$TOMCAT_HOST/manager/text/deploy?update=true&path=/eva/webservices/identifiers&version=$DATETIME" | grep "OK - Deployed application"

deploy-tomcat-internal:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: internal
        TOMCAT_USER: $TOMCAT_INTERNAL_USER
        TOMCAT_PASSWORD: $TOMCAT_INTERNAL_PASSWORD
        TOMCAT_HOST: $TOMCAT_INTERNAL_HOST
    dependencies:
        - package-internal
    only:
        - master

deploy-tomcat-development:
    extends: .deploy-tomcat
    variables:
        ENVIRONMENT_NAME: development
        TOMCAT_USER: $TOMCAT_DEVELOPMENT_USER
        TOMCAT_PASSWORD: $TOMCAT_DEVELOPMENT_PASSWORD
        TOMCAT_HOST: $TOMCAT_DEVELOPMENT_HOST
    dependencies:
        - package-development
    only:
        - master

deploy-tomcat-production:
    extends: .deploy-tomcat
    when: manual
    variables:
        ENVIRONMENT_NAME: production
        TOMCAT_USER: $TOMCAT_PRODUCTION_USER
        TOMCAT_PASSWORD: $TOMCAT_PRODUCTION_PASSWORD
        TOMCAT_HOST: $TOMCAT_PRODUCTION_HOST
    dependencies:
        - package-production
    only:
        - tags

deploy-tomcat-production-fallback:
    extends: .deploy-tomcat
    when: manual
    variables:
        ENVIRONMENT_NAME: production
        TOMCAT_USER: $TOMCAT_PRODUCTION_FALLBACK_USER
        TOMCAT_PASSWORD: $TOMCAT_PRODUCTION_FALLBACK_PASSWORD
        TOMCAT_HOST: $TOMCAT_PRODUCTION_FALLBACK_HOST
    dependencies:
        - package-production
    only:
        - tags

# Not executed, parent job definition for deployments of jar files
.deploy-jar:
    stage: deploy
    image: alpine:3.9.5
    environment:
        name: $ENVIRONMENT_NAME
    script:
        # Start ssh-agent and set identity then copy the Jar file and create a symlink
        # See https://docs.gitlab.com/ee/ci/ssh_keys/
        - apk add --update openssh-client
        - eval "$(ssh-agent)"
        - echo "$EVA_ETL_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - TMP_NAME=$(basename $(ls $ARTIFACT_PATH))
        - ARTIFACT_NAME=${TMP_NAME%%.jar}-${ENVIRONMENT_NAME}.jar
        - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $ARTIFACT_PATH ${CLUSTER_USER}@${CLUSTER_LOGIN_NODE}:${DEPLOY_DIRECTORY_PATH}/${ARTIFACT_NAME}
        - ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${CLUSTER_USER}@${CLUSTER_LOGIN_NODE} "ln -fns ${DEPLOY_DIRECTORY_PATH}/${ARTIFACT_NAME} ${DEPLOY_DIRECTORY_PATH}/${SYMLINK_NAME}"

deploy-clustering-jar-development:
    extends: .deploy-jar
    variables:
        ENVIRONMENT_NAME: development
        ARTIFACT_PATH: $CLUSTERING_ARTIFACT_PATH
        DEPLOY_DIRECTORY_PATH: $CLUSTERING_DEVELOPMENT_PATH
        SYMLINK_NAME: $CLUSTERING_SYMLINK_NAME
    dependencies:
        - package-development
    only:
        - master

deploy-accessioning-jar-development:
    extends: .deploy-jar
    variables:
        ENVIRONMENT_NAME: development
        ARTIFACT_PATH: $ACCESSIONING_ARTIFACT_PATH
        DEPLOY_DIRECTORY_PATH: $ACCESSIONING_DEVELOPMENT_PATH
        SYMLINK_NAME: $ACCESSIONING_SYMLINK_NAME
    dependencies:
        - package-development
    only:
        - master

deploy-clustering-jar-production:
    extends: .deploy-jar
    when: manual
    variables:
        ENVIRONMENT_NAME: production
        ARTIFACT_PATH: $CLUSTERING_ARTIFACT_PATH
        DEPLOY_DIRECTORY_PATH: $CLUSTERING_PRODUCTION_PATH
        SYMLINK_NAME: $CLUSTERING_SYMLINK_NAME
    dependencies:
        - package-production
    only:
        - tags

deploy-accessioning-jar-production:
    extends: .deploy-jar
    when: manual
    variables:
        ARTIFACT_PATH: $ACCESSIONING_ARTIFACT_PATH
        DEPLOY_DIRECTORY_PATH: $ACCESSIONING_PRODUCTION_PATH
        SYMLINK_NAME: $ACCESSIONING_SYMLINK_NAME
    dependencies:
        - package-production
    only:
        - tags
